name: Node.js CI

on:
  push:
    branches: [ like_pixellot,test ]    
 # pull_request:
 #   branches: [ master ]

jobs:

  test_job:
    name: Build and test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x] # Make sure to test with the docker image's node js version

    steps:
    - uses: actions/checkout@v2
    
    - name: Compare Nodejs versions for "Dockerfile" and "current runner machine"
      working-directory: ${{ github.workspace }}
      run: | 
        echo " Stub - checkout first job"

    - name: Use Node.js ${{ matrix.node-version }}
      run: |
        echo " Stub - Use nodejs"    
          

  push_image_job:
    name: Upload to ECR
    runs-on: ubuntu-latest
    needs: test_job
    if: github.event_name == 'push' &&(github.ref == 'refs/heads/master'|| github.ref == 'refs/heads/test')

    steps:
    - name: Checkout
      run: |
        echo " Stub - checkout second job"
        sleep 5

    - name: Create version for docker tag
      shell: bash
      run: |
        echo "Stub -  creating version "

    - name: Configure AWS credentials
      run: |
        echo " Stub - configure aws credentials"

    - name: Login to Amazon ECR
      id: login-ecr
      run: |
        echo "Stub -  Login to AWS ECR "
    
    - name: Get repo name
      id: extract-repo-name
      shell: bash
      run: |
        echo "Stub -  get repo name "

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      run: |
        echo "Stub -  Build image "
        
    - name: Slack Notify
      uses: act10ns/slack@v1
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_URL }}        
      if: failure()    

  update-jira:
    name: Update JIRA
    runs-on: ubuntu-latest
    needs: push_image_job
    if: github.event_name == 'push' && github.ref == 'refs/heads/master1' # Hack to skip this job for now

    steps:
      - name: Setup
        run: |
          echo "Stub - setup jira job "

      - name: Checkout
        run: |
          echo "Stub - checkout "

      - name: Login
        run: |
          echo "Stub - login to jira"

      - name: Get git version
        id: get-version
        shell: bash
        run: |
          echo " Stub - Get git version"

      - name: Find issue in commit messages
        id: find-issue
        run: |
          echo " Stub - find issue in commit message"

      - name: Transition issue & Set version
        run: |
          echo " Stub - transition and set version"
  test-slack:
    name: slack-test
    runs-on: ubuntu-latest
    needs: [test_job,push_image_job]
    if: always()
    steps:
                      #- uses: technote-space/workflow-conclusion-action@v1
                      #- name: Slack Notify
                      #  uses: act10ns/slack@v1
                      #  with:
                      #    status: ${{ env.WORKFLOW_CONCLUSION }}
                      #    steps: ${{ toJson(steps) }}
                      #  env:
                      #    SLACK_WEBHOOK_URL: ${{ secrets.SLACK_URL }}
   # - name: Slack Workflow Notification
   #   uses: Gamesight/slack-workflow-status@master
   #   with:
          # Required Input
   #    repo_token: ${{secrets.GITHUB_TOKEN}}
   #    slack_webhook_url: ${{secrets.SLACK_URL}}        
        
    - name: test curl 
      run: |
        #a=$(curl -sL https://api.github.com/repos/hroyg/slack-notify-workflow/actions/runs/171555474/jobs |jq .)
        #echo $a |jq .
        env

    - uses: actions/checkout@v2    
        
    - name: Hello world action step
      id: hello
      uses: ./
      with:
        workflow_name:  ${{ github.workflow }}
        github_run_id: ${{ github.run_id }}
        github_repository: ${{ github.repository }}
        
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@master
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_URL }}
        SLACK_CHANNEL: general
        SLACK_COLOR: '#3278BD'
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: 'workflow ${{ workflow_result }} for job# ${{ steps.hello.outputs.failed_job }} on step ${{ steps.hello.outputs.failed_step }}'
        SLACK_TITLE: Post Title
        SLACK_USERNAME: rtCamp
        
